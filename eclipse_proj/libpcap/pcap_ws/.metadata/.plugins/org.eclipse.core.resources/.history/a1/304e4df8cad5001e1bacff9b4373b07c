/*
 * main.c
 *
 *  Created on: Feb 26, 2024
 *      Author: ismael
 */


/* Compile with: gcc main.c -lpcap */
//#include <stdio.h>
////#include <pcap/pcap.h>
////#include <pcap-int.h>
//
//#include <net/ethernet.h>
//#include <netinet/ip.h>
//#include <netinet/in.h>
//#include <netinet/tcp.h>
//#include <arpa/inet.h>

#include <stdio.h>
#include <pcap.h>

#define LINE_LEN 16
#define SRC_FILE "20231219_114436___T0003.pcap"

void dispatcher_handler(u_char *, const struct pcap_pkthdr *, const u_char *);

int main()
{
	pcap_t *fp;
	char errbuf[PCAP_ERRBUF_SIZE];
	char source[PCAP_BUF_SIZE];
	char err_buff[PCAP_BUF_SIZE];


    if ( (fp = pcap_open_offline(SRC_FILE,err_buff)) == NULL)
	{
		fprintf(stderr,"\nUnable to open the file %s.\n", source);

	}

    // read and dispatch packets until EOF is reached
    pcap_loop(fp, 0, dispatcher_handler, NULL);

    return 0;
}



void dispatcher_handler(u_char *temp1,
                        const struct pcap_pkthdr *header, const u_char *pkt_data)
{
    u_int i=0;


    /* print pkt timestamp and pkt len */
    printf("%ld:%ld (%ld)\n", header->ts.tv_sec, header->ts.tv_usec, header->len);

    /* Print the packet */
    for (i=1; (i < header->caplen + 1 ) ; i++)
    {
        printf("%.2x ", pkt_data[i-1]);
        if ( (i % LINE_LEN) == 0) printf("\n");
    }

    printf("\n\n");

}
